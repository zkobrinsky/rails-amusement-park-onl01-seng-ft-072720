exit
@user.validate(params[:user][:password])
@user = User.find_by_id(params[:user][:id])
params
exit
@user.admin
@user = User.new(user_params)
exit
params[:user][:admin]
params
exit
params
exit
ActiveRecord::ConnectionAdapters::Column.value_to_boolean("0")
0.nil?
1.nil?
Boolean.new.cast(1)
1.value_to_boolean
!!0
!!1
@user = User.new(admin :params[:user][:admin])
@user = User.new(admin :params[:user][:admin](
@user
params[:user][:admin].true?
params[:user][:admin]
params
exit
params
exit
current_user
session[:user_id] = @user.id
exit
@user.validate(params[:user][:password])
@user
exit
User.find_by_name(params[:user][:name])
params[:user]
params
exit
params
params[:user]
exit
params[\
params
params[:name]
User.find_by_name(params[:name])
User.find_by_name(params[:name[)
current_user
session[:user_id]
session
session.clear
@user
current_user
params
exit
params
exit
@user.attributes.except("id", "password_digest", "admin")
@user.attributes.except("id")
@user.attributes
hash.except(:b)
hash
has.except(:b)
hash = {a: 2, b: 2}
hash = {a: "1"}
hash = {:a => "1"}
hash = {1: => "1"}
hash = {:1 => "1"}
hash = { 1: 1 }
hash = {1: 1}
hash = {1: "1"}
hash = {}
hash = {1: "1", 2: "2"}
@user.attributes.except(:id)
@user.attributes.except(:id, :password_digest, :admin)
@user.attributes
exit
User.last
@user.attributes.each { |key, value| puts "#{key}: #{value}"}
@user.attributes.each do |key, value|
@user.attributes
@user
exit
@user.name
@user
exit
@user.valid?
@user.validate("password")
@user
exit
self.user.nausea
self.user.update(nausea: updated_nausea)
updated_nausea = self.user.nausea - self.attraction.nausea_rating
exit
@attraction
@user
exit
user.tickets = 0
user.tickets
self.user.update(tickets: self.user.tickets - self.attraction.tickets)
user = self.user
self.user.tickets
self.user.update(tickets: self.user.tickets - self.attraction.tickets)
self.user.tickets
self.user.tickets = self.user.tickets - self.attraction.tickets
self.attraction.tickets
self.user.tickets
ticket_check
!ticket_check
exit
ticket_check.present?
ticket_check.blank?
ticket_check.boolean?
!!ticket_check
ticket_check
self.attraction.tickets
self.user.tickets
ticket_check
exit
!height_check
!ticket_check
exit
ticket_check
self.user.tickets
exit
errors.join(" ")
errors
exit
errors.join(" ")
errors
exit
self.user.height > self.attraction.min_height
self.user.height < self.attraction.min_height
height_check
exit
height_check
reload
ticket_check
exit
self.user.tickets < self.attraction.tickets
self.user.tickets > self.attraction.tickets
self.ticket_check
ticket_check
exit
ticket_check
self.attraction.tickets
self.user.attraction.tickets
self.user.tickets
self
self.ticket_check
ticket_check
exit
self.user.tickets > self.attraction.tickets
self.user
self
exit
new_attraction.users.password_digest
new_attraction.users.last
new_attraction.users.last.password
new_attraction.users.last.save
new_attraction.users.last.password
new_attraction.users.last.valid?
new_attraction.users.last.password = "password"
new_attraction.users.last.errors
new_attraction.users.last.valid?
new_attraction.users.last.validate?
new_attraction.users.last.validate("password")
new_attraction.users.last
new_attraction.users
new_attraction.user
new_attraction
User.last
exit
User.last.validate("password")
User.last
User.last.errors
User.last.errors.full_messages
User.last.validate("password")
User.last
User.last.password
new_attraction.users.last.validate("password")
new_attraction.users.last.validate("")
new_attraction.users.last.password
new_attraction.users.last
new_attraction.users.last.validate("password")
new_attraction.users.last
new_attraction.users.last.password
new_attraction.users.last.password.digest
new_attraction.users.last.password
new_attraction.users.last.errors
new_attraction.users.last.valid?
new_attraction.users.last
exit
self.mood = "sad"
self.happiness > self.nausea
self.nausea
self.happiness
